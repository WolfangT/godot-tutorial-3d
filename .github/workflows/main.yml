name: Deploy
# Trigger this workflow on pushes to the specified branch
on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest # Run this job on the latest Ubuntu version

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # Check out your repository code

      - name: SSH and run commands
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Reference the private key stored in GitHub Secrets
        run: |
          echo "$PRIVATE_KEY" > private_key.pem # Write the private key to a file
          chmod 600 private_key.pem # Set the appropriate permissions for the key file

          # Establish an SSH connection and execute commands on the remote server
          ssh -o StrictHostKeyChecking=no -i private_key.pem \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} <<EOF
            rm -f /var/www/squash/*
            # find /var/www/squash_server/ -maxdepth 1 -type f -delete
            rm -f /etc/nginx/conf.d/06-wolfang.conf
          EOF

          scp -o StrictHostKeyChecking=no -i private_key.pem ./build/web/*  \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/var/www/squash

          scp -o StrictHostKeyChecking=no -i private_key.pem ./server_node/* \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/var/www/squash_server

          scp -o StrictHostKeyChecking=no -i private_key.pem ./deployment/06-wolfang.conf  \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/etc/nginx/conf.d/06-wolfang.conf

          # Establish an SSH connection and execute commands on the remote server
          ssh -o StrictHostKeyChecking=no -i private_key.pem \
              ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} <<EOF
            cd /var/www/squash_server
            npm install
            systemctl restart squash_server.service
            systemctl restart nginx.service
          EOF

          rm -f private_key.pem # Remove the private key file after use for security
    permissions:
      contents: read
      actions: write
      id-token: write
